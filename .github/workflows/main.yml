name: Python Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m venv venv
        venv\Scripts\pip install -r requirement.txt

    - name: Run tests and generate JUnit report
      run: |
        mkdir results
        venv\Scripts\pytest tests --junitxml=results\TEST-results.xml

    - name: Upload test report
      uses: actions/upload-artifact@v4
      with:
        name: junit-test-results
        path: results/TEST-results.xml

    - name: Download Allure CLI
      run: |
        curl -o allure.zip https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.24.0/allure-commandline-2.24.0.zip
        unzip allure.zip -d allure
        echo "ALLURE_HOME=$PWD/allure/allure-commandline-2.24.0" >> $GITHUB_ENV
        echo "$PWD/allure/allure-commandline-2.24.0/bin" >> $GITHUB_PATH
        
    - name: Run tests and generate Allure results
      run: |
        mkdir allure-results
        venv\Scripts\pytest tests --alluredir=allure-results

    - name: Generate Allure Report
      run: allure generate allure-results -o allure-report --clean

    - name: Upload Allure Report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: allure-report
        path: allure-report
